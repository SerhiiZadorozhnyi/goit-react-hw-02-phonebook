{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","INITIAL_STATE","name","number","ContactForm","state","handleChange","type","e","contacts","props","contactInState","find","contact","toLowerCase","target","value","alert","setState","handleSubmit","preventDefault","onAddContact","this","onSubmit","className","styles","formButtons","TextField","id","label","placeholder","multiline","variant","size","onChange","sectionAddButton","Button","color","addButton","Component","useStyles","makeStyles","theme","inputFilter","margin","spacing","Filter","onChangeFilter","classes","filter","labelFilter","defaultProps","root","width","maxWidth","backgroundColor","palette","background","paper","ContactListItem","onClickRemove","List","ListItem","button","divider","itelElement","ListItemText","onClick","ContactList","filteredContacts","onRemove","length","contactList","map","App","addContact","newContact","uuid","prevState","handleChangeFilter","getFilteredContacts","includes","handleRemove","contactId","title","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bcf04754.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formButtons\":\"ContactForm_formButtons__CqKFf\",\"sectionAddButton\":\"ContactForm_sectionAddButton__3hMdR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3ks4q\",\"labelFilter\":\"Filter_labelFilter__2kBWF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"ContactList_contactListItem__22grm\",\"contactList\":\"ContactList_contactList__1w7by\"};","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport styles from './ContactForm.module.css';\r\n\r\n\r\nconst INITIAL_STATE = {\r\n    name: '',\r\n    number: '',\r\n  }\r\n\r\nexport default class ContactForm extends Component {\r\n\r\n    state = INITIAL_STATE;\r\n\r\n    handleChange = (type, e) => {\r\n        const {contacts} = this.props;\r\n        if (type==='name') {\r\n          const contactInState = contacts.find(contact => contact.name.toLowerCase() === e.target.value.toLowerCase());\r\n          if (contactInState) {\r\n            alert(`${contactInState.name} is already in contacts!`);\r\n          }\r\n        }\r\n        this.setState({[type]: e.target.value})\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const {name, number} = this.state;\r\n        const {contacts, onAddContact} = this.props;\r\n        const contactInState = contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase());\r\n        contactInState && alert(`${contactInState.name} is already in contacts!`);\r\n        if (!contactInState && name && number) {\r\n            onAddContact(name, number);\r\n            this.setState(INITIAL_STATE);\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        const {name, number} = this.state;\r\n        return (\r\n            <form onSubmit={this.handleSubmit} className={styles.formButtons}>\r\n                <label>\r\n                    <TextField\r\n                        id=\"outlined-textarea\"\r\n                        label=\"Name\"\r\n                        placeholder=\"Enter name\"\r\n                        multiline\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        value={name}\r\n                        type=\"text\"\r\n                        onChange={e => this.handleChange('name', e)}\r\n                    />\r\n                </label><br/>\r\n\r\n                <label>\r\n                    <TextField\r\n                        id=\"outlined-textarea\"\r\n                        label=\"Number\"\r\n                        placeholder=\"Enter number\"\r\n                        multiline\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        value={number}\r\n                        type=\"tel\"\r\n                        onChange={e => this.handleChange('number', e)}\r\n                    />\r\n                </label><br/>\r\n\r\n                <div className={styles.sectionAddButton}>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={styles.addButton}\r\n                    >\r\n                        Add contact\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nContactForm.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.exact({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n        })\r\n    ),\r\n    onAddContact: PropTypes.func.isRequired,\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport styles from './Filter.module.css';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inputFilter: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        // width: '25ch',\r\n        // width: '100%',\r\n        // height: '5ch',\r\n      },\r\n    },\r\n  }));\r\n\r\nexport default function Filter({value, onChangeFilter}) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={styles.filter}>\r\n            <p className={styles.labelFilter}>Find contacts by name</p>\r\n            {/* <input type=\"text\" value={value} onChange={e => onChangeFilter(e.target.value)}/> */}\r\n            <TextField\r\n                id=\"outlined-textarea\"\r\n                label=\"Name or number\"\r\n                placeholder=\"Enter name or number\"\r\n                multiline\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                value={value}\r\n                type=\"text\"\r\n                onChange={e => onChangeFilter(e.target.value)}\r\n                className={classes.inputFilter}\r\n                // width=\"100%\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nFilter.defaultProps = {\r\n    value: '',\r\n}\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string,\r\n    onChangeFilter: PropTypes.func.isRequired,\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport './sprite.svg';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      maxWidth: 360,\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n  }));\r\n\r\n\r\nconst ContactListItem = ({name, number, onClickRemove}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n    <List>\r\n        <ListItem button divider className={classes.itelElement}>\r\n            {/* <li className={styles.contactListItem}> */}\r\n            <ListItemText><p>{name}<br/>{number}</p></ListItemText>\r\n            {/* <ListItemText primary={number} /> */}\r\n                {/* <p>{name}: {number}</p> */}\r\n                <Button \r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={onClickRemove}\r\n                >\r\n                    Delete\r\n                </Button>\r\n            {/* </li> */}\r\n        </ListItem>\r\n    </List>\r\n    )\r\n}\r\n\r\nconst ContactList = ({filteredContacts, onRemove}) => {\r\n    return (\r\n        filteredContacts.length > 0 && (\r\n            <ul className={styles.contactList}>\r\n                {filteredContacts.map(({id, name, number}) => (\r\n                    <ContactListItem key={id} name={name} number={number} onClickRemove={() => onRemove(id)} />\r\n                ))}\r\n            </ul>\r\n        )\r\n    )\r\n}\r\n\r\nexport default ContactList;\r\n\r\nContactListItem.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    onClickRemove: PropTypes.func.isRequired,\r\n}\r\n\r\nContactList.propTypes = {\r\n    filteredContacts: PropTypes.arrayOf(\r\n        PropTypes.exact({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n        })\r\n    ),\r\n    onRemove: PropTypes.func.isRequired,\r\n}","import React, { Component } from 'react';\nimport {uuid} from 'uuidv4';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport './App.css';\n\n\nclass App extends Component {\n  state = {\n    contacts: [\n      {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n      {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n      {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n      {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n    ],\n    filter: '',\n  }\n\n  addContact = (name, number) => {\n    const newContact = {\n      id: uuid(),\n      name,\n      number,\n    };\n    this.setState(prevState => {\n      return {\n        contacts: [...prevState.contacts, newContact],\n      }\n    });\n  }\n\n  handleChangeFilter = filter => {\n    this.setState({filter});\n  }\n\n  getFilteredContacts = () => {\n    const {contacts, filter} = this.state;\n    return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()))\n  }\n\n  handleRemove = contactId => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(({id}) => id !== contactId)\n      }\n    })\n  }\n\n  render() {\n    const {contacts, filter} = this.state;\n    return(\n      <>\n        <div className=\"Container\">\n          <section title=\"Phonebook\" className=\"Section\">\n            <h1>Phonebook</h1>\n            <ContactForm contacts={contacts} onAddContact={this.addContact}/>\n          </section>\n          <section title=\"Contacts\" className=\"Section\">\n            <h2>Contacts</h2>\n            <Filter value={filter} onChangeFilter={this.handleChangeFilter}/>\n            <ContactList filteredContacts={this.getFilteredContacts()} onRemove={this.handleRemove} />\n          </section>\n        </div>\n      </>\n    )\n  }\n}\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}